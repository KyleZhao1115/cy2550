import argparse
import random

# Parse command-line arguments
parser = argparse.ArgumentParser(description='Generate a secure, memorable password using the XKCD method')
parser.add_argument('-w', '--words', type=int, default=4, help='include WORDS words in the password (default=4)')
parser.add_argument('-c', '--caps', type=int, default=0, help='capitalize the first letter of CAPS random words (default=0)')
parser.add_argument('-n', '--numbers', type=int, default=0, help='insert NUMBERS random numbers in the password (default=0)')
parser.add_argument('-s', '--symbols', type=int, default=0, help='insert SYMBOLS random symbols in the password (default=0)')
args = parser.parse_args()

# Load wordlist from file
with open('words.txt', 'r') as file:
    wordlist = [line.strip() for line in file]

# Generate password
password_words = random.choices(wordlist, k=args.words)
password = ''.join(password_words)

# Capitalize random words
if args.caps > 0:
    for _ in range(args.caps):
        random_word_index = random.randint(0, len(password_words) - 1)
        password = password[:random_word_index] + password[random_word_index].capitalize() + password[random_word_index + 1:]

# Insert random numbers
if args.numbers > 0:
    for _ in range(args.numbers):
        random_index = random.randint(0, len(password))
        random_number = random.randint(0, 9)
        password = password[:random_index] + str(random_number) + password[random_index:]

# Insert random symbols
symbols = '~!@#$%^&*.:;'
if args.symbols > 0:
    for _ in range(args.symbols):
        random_index = random.randint(0, len(password))
        random_symbol = random.choice(symbols)
        password = password[:random_index] + random_symbol + password[random_index:]

# Print the generated password
print(password)

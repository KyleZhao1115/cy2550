#!/usr/bin/env python3

import argparse
import random
import string

def generate_password(w, c, n, s):
    with open('words.txt', 'r') as f:
        words = [line.strip() for line in f]
    password_words = random.sample(words, w)
    
    if c:
        password_words = [word.capitalize() if random.choice([True, False]) else word for word in password_words]
    if n:
        for i in range(len(password_words)-1):
            if random.choice([True, False]):
                password_words.insert(i*2+1, str(random.randint(0, 9)))
    if s:
        symbols = string.punctuation
        for i in range(len(password_words)-1):
            if random.choice([True, False]):
                password_words.insert(i*2+1, random.choice(symbols))
    return "".join(password_words)


def main():

    parser = argparse.ArgumentParser(description='Generate a secure, memorable password using the XKCD method')
    parser.add_argument('-w', '--words', type=int, default=4, help='include WORDS words in the password (default=4)')
    parser.add_argument('-c', '--caps', type=int, default=0, help='capitalize the first letter of CAPS random words (default=0)')
    parser.add_argument('-n', '--numbers', type=int, default=0, help='insert NUMBERS random numbers in the password (default=0)')
    parser.add_argument('-s', '--symbols', type=int, default=0, help='insert SYMBOLS random symbols in the password (default=0)')
    args = parser.parse_args()


    print(generate_password(args.w, args.c, args.n, args.s))

main()
